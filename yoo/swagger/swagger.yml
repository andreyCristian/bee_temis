swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /entity/:
    get:
      tags:
      - entity
      description: get Entity
      operationId: EntityController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entity'
        "403":
          description: ""
    post:
      tags:
      - entity
      description: create Entity
      operationId: EntityController.Post
      parameters:
      - in: body
        name: body
        description: body for Entity content
        required: true
        schema:
          $ref: '#/definitions/models.Entity'
      responses:
        "201":
          description: '{int} models.Entity'
        "403":
          description: body is empty
  /entity/{id}:
    get:
      tags:
      - entity
      description: get Entity by id
      operationId: EntityController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entity'
        "403":
          description: :id is empty
    put:
      tags:
      - entity
      description: update the Entity
      operationId: EntityController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Entity content
        required: true
        schema:
          $ref: '#/definitions/models.Entity'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entity'
        "403":
          description: :id is not int
    delete:
      tags:
      - entity
      description: delete the Entity
      operationId: EntityController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /entity_rol/:
    get:
      tags:
      - entity_rol
      description: get EntityRol
      operationId: EntityRolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntityRol'
        "403":
          description: ""
    post:
      tags:
      - entity_rol
      description: create EntityRol
      operationId: EntityRolController.Post
      parameters:
      - in: body
        name: body
        description: body for EntityRol content
        required: true
        schema:
          $ref: '#/definitions/models.EntityRol'
      responses:
        "201":
          description: '{int} models.EntityRol'
        "403":
          description: body is empty
  /entity_rol/{id}:
    get:
      tags:
      - entity_rol
      description: get EntityRol by id
      operationId: EntityRolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntityRol'
        "403":
          description: :id is empty
    put:
      tags:
      - entity_rol
      description: update the EntityRol
      operationId: EntityRolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EntityRol content
        required: true
        schema:
          $ref: '#/definitions/models.EntityRol'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EntityRol'
        "403":
          description: :id is not int
    delete:
      tags:
      - entity_rol
      description: delete the EntityRol
      operationId: EntityRolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ipc/:
    get:
      tags:
      - ipc
      description: get Ipc
      operationId: IpcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "403":
          description: ""
    post:
      tags:
      - ipc
      description: create Ipc
      operationId: IpcController.Post
      parameters:
      - in: body
        name: body
        description: body for Ipc content
        required: true
        schema:
          $ref: '#/definitions/models.Ipc'
      responses:
        "201":
          description: '{int} models.Ipc'
        "403":
          description: body is empty
  /ipc/{id}:
    get:
      tags:
      - ipc
      description: get Ipc by id
      operationId: IpcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "403":
          description: :id is empty
    put:
      tags:
      - ipc
      description: update the Ipc
      operationId: IpcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ipc content
        required: true
        schema:
          $ref: '#/definitions/models.Ipc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "403":
          description: :id is not int
    delete:
      tags:
      - ipc
      description: delete the Ipc
      operationId: IpcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Entity:
    title: Entity
    type: object
    properties:
      Id:
        type: integer
        format: int64
      IdEntity:
        type: integer
        format: int64
      IdRol:
        type: integer
        format: int64
      IdSons:
        type: string
      IdSuccesor:
        type: integer
        format: int64
  models.EntityRol:
    title: EntityRol
    type: object
    properties:
      Description:
        type: string
      Id:
        type: integer
        format: int64
  models.Ipc:
    title: Ipc
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Porcent:
        type: integer
        format: int64
      Year:
        type: integer
        format: int64
tags:
- name: entity_rol
  description: |
    EntityRolController operations for EntityRol
- name: ipc
  description: |
    IpcController operations for Ipc
- name: entity
  description: |
    EntityController operations for Entity
